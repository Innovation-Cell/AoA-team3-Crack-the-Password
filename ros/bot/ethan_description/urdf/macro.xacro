<?xml version="1.0"?>
<!-- 
   we will use macros, which are like functions, to reduce the remaining code in m2wr.xacro file.
-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!--
      we have defined two macros, their purpose is to take parameters and create the required element (link element).
      The first macro is named link_wheel and it accepts only one parameter name. It creates a wheel link with the name passed in the parameter. 
    -->
    <xacro:macro name="link_wheel" params="name mass r l">
      <link name="${name}">
        <inertial>
          <mass value="${mass}"/>
          <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
          <inertia ixx="${mass*(3*r*r+l*l)/12}" ixy = "0" ixz = "0" iyy="${mass*(3*r*r+l*l)/12}" iyz = "0" izz="${mass*(r*r)/2}" />
        </inertial>
        <collision name="link_right_wheel_collision">
          <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${l}" radius="${r}"/>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>10000</mu>
                <mu2>10000</mu2>
                <mu3>10000</mu3>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name="${name}_visual">
          <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${l}" radius="${r}"/>
          </geometry>
        </visual>
      </link>
    </xacro:macro>

    <!--
      The second macro accepts three parameters name, child and origin_xyz and it creates a joint link.
    -->
    <xacro:macro name="joint_wheel" params="name child origin_xyz">
      <joint name="${name}" type="continuous">
        <origin rpy="0 0 0" xyz="${origin_xyz}"/>
        <child link="${child}"/>
        <parent link="link_chassis"/>
        <axis rpy="0 0 0" xyz="0 1 0"/>
        <limit effort="10000" velocity="1000"/>
        <joint_properties damping="1.0" friction="1.0"/>
      </joint>
      
    </xacro:macro>

    <!-- 
      new macro for controlling the moment of inertia of the sensor cilinder
    -->
    <xacro:macro name="cylinder_inertia" params="mass r l"> 
      <inertia ixx="${mass*(3*r*r+l*l)/12}" ixy = "0" ixz = "0" iyy="${mass*(3*r*r+l*l)/12}" iyz = "0" izz="${mass*(r*r)/2}" /> 
    </xacro:macro>


    <xacro:macro name="scissor_plate" params="name mass l w h">
        <link name="${name}">

          <inertial>
          <origin rpy="0 0 0" xyz="0 0 0.15"/>
          <mass value="${mass}" />
          <inertia ixx="${mass*(w*w + h*h)/12}" ixy="0.0" ixz="0.0" iyy="${mass*(w*w + h*h)/12}" iyz="0.0" izz="${mass*(w*w + l*l)/12}" />
        </inertial>
            <collision name="${name}_collison">
              <origin rpy="0 0 0" xyz="0 0 0.15"/>
              <geometry>
                <box size="${l} ${w} ${h}"/>
              </geometry>
            </collision>
            <visual name="${name}_visual">
              <origin rpy="0 0 0" xyz="0 0 0.15"/>
              <geometry>
                <box size="${l} ${w} ${h}"/>
              </geometry>
            </visual>
        </link>
    </xacro:macro>   

     <xacro:macro name="joint_scissor" params="name child parent origin_xyz">
      <joint name="${name}" type="continuous">
        <axis xyz="0 1 0" rpy="0 0 0" /> 
        <child link="${child}"/>
        <parent link="${parent}" />
        <origin rpy="0 0  0" xyz="${origin_xyz}"/>
      </joint>
      
    </xacro:macro>

</robot>